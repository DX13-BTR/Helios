"""init models and unique constraints

Revision ID: 174f284a6f82
Revises: 
Create Date: 2025-08-12 21:17:35.343872

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '174f284a6f82'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('allowlist_meta',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('version', sa.Integer(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('clients',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('client_domains',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('client_id', sa.String(), nullable=False),
    sa.Column('domain', sa.String(), nullable=False),
    sa.Column('wildcard', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['client_id'], ['clients.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('client_id', 'domain', 'wildcard', name='uq_client_domain_wild')
    )
    with op.batch_alter_table('client_domains', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_client_domains_client_id'), ['client_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_client_domains_domain'), ['domain'], unique=False)

    op.create_table('client_emails',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('client_id', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['client_id'], ['clients.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('client_id', 'email', name='uq_client_email')
    )
    with op.batch_alter_table('client_emails', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_client_emails_client_id'), ['client_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_client_emails_email'), ['email'], unique=False)

    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('client_emails', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_client_emails_email'))
        batch_op.drop_index(batch_op.f('ix_client_emails_client_id'))

    op.drop_table('client_emails')
    with op.batch_alter_table('client_domains', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_client_domains_domain'))
        batch_op.drop_index(batch_op.f('ix_client_domains_client_id'))

    op.drop_table('client_domains')
    op.drop_table('clients')
    op.drop_table('allowlist_meta')
    # ### end Alembic commands ###
